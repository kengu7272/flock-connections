// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const RouteLazyImport = createFileRoute('/')()
const LoginIndexLazyImport = createFileRoute('/login/')()
const FlockIndexLazyImport = createFileRoute('/flock/')()
const AboutIndexLazyImport = createFileRoute('/about/')()

// Create/Update Routes

const RouteLazyRoute = RouteLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/route.lazy').then((d) => d.Route))

const LoginIndexLazyRoute = LoginIndexLazyImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/index.lazy').then((d) => d.Route))

const FlockIndexLazyRoute = FlockIndexLazyImport.update({
  path: '/flock/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/flock/index.lazy').then((d) => d.Route))

const AboutIndexLazyRoute = AboutIndexLazyImport.update({
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof RouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      preLoaderRoute: typeof AboutIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/flock/': {
      preLoaderRoute: typeof FlockIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      preLoaderRoute: typeof LoginIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  RouteLazyRoute,
  AboutIndexLazyRoute,
  FlockIndexLazyRoute,
  LoginIndexLazyRoute,
])
