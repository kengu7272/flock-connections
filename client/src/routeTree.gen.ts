// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as AuthImport } from "./routes/_auth";
import { Route as AuthFlockFlockIdCreateIndexImport } from "./routes/_auth/flock/$flockId/create/index";
import { Route as AuthFlockFlockIdIndexImport } from "./routes/_auth/flock/$flockId/index";
import { Route as AuthFlockIndexImport } from "./routes/_auth/flock/index";
import { Route as AuthHomeIndexImport } from "./routes/_auth/home/index";
import { Route as AuthProfileProfileIdIndexImport } from "./routes/_auth/profile/$profileId/index";
import { Route as NotLoggedInImport } from "./routes/_notLoggedIn";

// Create Virtual Routes

const NotLoggedInIndexLazyImport = createFileRoute("/_notLoggedIn/")();
const NotLoggedInLoginIndexLazyImport = createFileRoute(
  "/_notLoggedIn/login/",
)();

// Create/Update Routes

const NotLoggedInRoute = NotLoggedInImport.update({
  id: "/_notLoggedIn",
  getParentRoute: () => rootRoute,
} as any);

const AuthRoute = AuthImport.update({
  id: "/_auth",
  getParentRoute: () => rootRoute,
} as any);

const NotLoggedInIndexLazyRoute = NotLoggedInIndexLazyImport.update({
  path: "/",
  getParentRoute: () => NotLoggedInRoute,
} as any).lazy(() =>
  import("./routes/_notLoggedIn/index.lazy").then((d) => d.Route),
);

const NotLoggedInLoginIndexLazyRoute = NotLoggedInLoginIndexLazyImport.update({
  path: "/login/",
  getParentRoute: () => NotLoggedInRoute,
} as any).lazy(() =>
  import("./routes/_notLoggedIn/login/index.lazy").then((d) => d.Route),
);

const AuthHomeIndexRoute = AuthHomeIndexImport.update({
  path: "/home/",
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import("./routes/_auth/home/index.lazy").then((d) => d.Route),
);

const AuthFlockIndexRoute = AuthFlockIndexImport.update({
  path: "/flock/",
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import("./routes/_auth/flock/index.lazy").then((d) => d.Route),
);

const AuthProfileProfileIdIndexRoute = AuthProfileProfileIdIndexImport.update({
  path: "/profile/$profileId/",
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import("./routes/_auth/profile/$profileId/index.lazy").then((d) => d.Route),
);

const AuthFlockFlockIdIndexRoute = AuthFlockFlockIdIndexImport.update({
  path: "/flock/$flockId/",
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import("./routes/_auth/flock/$flockId/index.lazy").then((d) => d.Route),
);

const AuthFlockFlockIdCreateIndexRoute =
  AuthFlockFlockIdCreateIndexImport.update({
    path: "/flock/$flockId/create/",
    getParentRoute: () => AuthRoute,
  } as any).lazy(() =>
    import("./routes/_auth/flock/$flockId/create/index.lazy").then(
      (d) => d.Route,
    ),
  );

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_auth": {
      preLoaderRoute: typeof AuthImport;
      parentRoute: typeof rootRoute;
    };
    "/_notLoggedIn": {
      preLoaderRoute: typeof NotLoggedInImport;
      parentRoute: typeof rootRoute;
    };
    "/_notLoggedIn/": {
      preLoaderRoute: typeof NotLoggedInIndexLazyImport;
      parentRoute: typeof NotLoggedInImport;
    };
    "/_auth/flock/": {
      preLoaderRoute: typeof AuthFlockIndexImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/home/": {
      preLoaderRoute: typeof AuthHomeIndexImport;
      parentRoute: typeof AuthImport;
    };
    "/_notLoggedIn/login/": {
      preLoaderRoute: typeof NotLoggedInLoginIndexLazyImport;
      parentRoute: typeof NotLoggedInImport;
    };
    "/_auth/flock/$flockId/": {
      preLoaderRoute: typeof AuthFlockFlockIdIndexImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/profile/$profileId/": {
      preLoaderRoute: typeof AuthProfileProfileIdIndexImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/flock/$flockId/create/": {
      preLoaderRoute: typeof AuthFlockFlockIdCreateIndexImport;
      parentRoute: typeof AuthImport;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthRoute.addChildren([
    AuthFlockIndexRoute,
    AuthHomeIndexRoute,
    AuthFlockFlockIdIndexRoute,
    AuthProfileProfileIdIndexRoute,
    AuthFlockFlockIdCreateIndexRoute,
  ]),
  NotLoggedInRoute.addChildren([
    NotLoggedInIndexLazyRoute,
    NotLoggedInLoginIndexLazyRoute,
  ]),
]);
